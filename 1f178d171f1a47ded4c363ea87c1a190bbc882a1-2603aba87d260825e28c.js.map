{"version":3,"file":"1f178d171f1a47ded4c363ea87c1a190bbc882a1-2603aba87d260825e28c.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/types.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/events/use-dom-event.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/PanSession.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://gatsby-starter-hello-world/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://gatsby-starter-hello-world/./node_modules/react-intersection-observer/react-intersection-observer.modern.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, useContext(LazyContext).strict, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { addDomEvent, useDomEvent } from '../events/use-dom-event.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    function onPointerStart(event, info) {\n        var _a;\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }\n    const callbackDependencies = [\n        Boolean(onTapStart),\n        Boolean(onTap),\n        Boolean(whileTap),\n        visualElement,\n    ];\n    const startPress = useCallback((event, info) => {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        onPointerStart(event, info);\n    }, callbackDependencies);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    const startAccessiblePress = useCallback(() => {\n        const stopKeydownListener = addDomEvent(visualElement.current, \"keydown\", (event) => {\n            if (event.key !== \"Enter\" || isPressing.current)\n                return;\n            isPressing.current = true;\n            cancelPointerEndListeners.current = addDomEvent(visualElement.current, \"keyup\", () => {\n                if (event.key !== \"Enter\" || !checkPointerEnd())\n                    return;\n                fireSyntheticPointerEvent(\"up\", visualElement.getProps().onTap);\n            }, eventOptions);\n            fireSyntheticPointerEvent(\"down\", onPointerStart);\n        });\n        const stopBlurListener = addDomEvent(visualElement.current, \"blur\", () => {\n            stopKeydownListener();\n            stopBlurListener();\n            if (isPressing.current) {\n                fireSyntheticPointerEvent(\"cancel\", onPointerCancel);\n            }\n        });\n    }, callbackDependencies);\n    useDomEvent(visualElement, \"focus\", hasPressListeners ? startAccessiblePress : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\n\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const isFocusActive = useRef(false);\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = visualElement.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, true);\n        isFocusActive.current = true;\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        if (!isFocusActive.current || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, false);\n        isFocusActive.current = false;\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst observerMap = new Map();\nconst RootIds = new WeakMap();\nlet rootId = 0;\nlet unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(key => options[key] !== undefined).map(key => {\n    return `${key}_${key === 'root' ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map();\n    let thresholds;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView = entry.isIntersecting && thresholds.some(threshold => entry.intersectionRatio >= threshold); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(callback => {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options); // Register the callback listener for this element\n\n  let callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\nconst _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nclass InView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.node = null;\n    this._unobserveCb = null;\n\n    this.handleNode = node => {\n      if (this.node) {\n        // Clear the old observer, before we start observing a new element\n        this.unobserve();\n\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          this.setState({\n            inView: !!this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      this.node = node ? node : null;\n      this.observeNode();\n    };\n\n    this.handleChange = (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        this.unobserve();\n      }\n\n      if (!isPlainChildren(this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        this.setState({\n          inView,\n          entry\n        });\n      }\n\n      if (this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        this.props.onChange(inView, entry);\n      }\n    };\n\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  }\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const {\n        inView,\n        entry\n      } = this.state;\n      return this.props.children({\n        inView,\n        entry,\n        ref: this.handleNode\n      });\n    }\n\n    const _this$props = this.props,\n          {\n      children,\n      as\n    } = _this$props,\n          props = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return React.createElement(as || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  }\n\n}\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _state$entry;\n\n  const [ref, setRef] = React.useState(null);\n  const callback = React.useRef();\n  const [state, setState] = React.useState({\n    inView: !!initialInView,\n    entry: undefined\n  }); // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n\n  callback.current = onChange;\n  React.useEffect(() => {\n    // Ensure we have node ref, and that we shouldn't skip observing\n    if (skip || !ref) return;\n    let unobserve;\n    unobserve = observe(ref, (inView, entry) => {\n      setState({\n        inView,\n        entry\n      });\n      if (callback.current) callback.current(inView, entry);\n\n      if (entry.isIntersecting && triggerOnce && unobserve) {\n        // If it should only trigger once, unobserve the element after it's inView\n        unobserve();\n        unobserve = undefined;\n      }\n    }, {\n      root,\n      rootMargin,\n      threshold,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n    return () => {\n      if (unobserve) {\n        unobserve();\n      }\n    };\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string, so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, ref, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  const entryTarget = (_state$entry = state.entry) == null ? void 0 : _state$entry.target;\n  const previousEntryTarget = React.useRef();\n\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.modern.mjs.map\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","children","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","onPointerStart","latestProps","callbackDependencies","startPress","startAccessiblePress","stopKeydownListener","stopBlurListener","whileFocus","isFocusActive","onFocus","isFocusVisible","matches","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","constructor","subscriptions","notify","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","super","arguments","getAttribute","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","documentNode","position","featureBundle","motion","observerMap","RootIds","unsupportedValue","rootId","optionsToId","toString","fallbackInView","bounds","intersectionRatio","boundingClientRect","intersectionRect","rootBounds","observer","elements","thresholds","_elements$get","trackVisibility","createObserver","callbacks","disconnect","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","isPlainChildren","_this$props","as","excluded","sourceKeys","_objectWithoutPropertiesLoose","React","_extends","useInView","_state$entry","setRef","entryTarget","previousEntryTarget"],"sourceRoot":""}